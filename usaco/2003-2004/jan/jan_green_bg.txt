**********************************************************************
                           GREEN PROBLEMS
**********************************************************************
                  Три задачи, номерирани от 1 до 3
**********************************************************************

Задача 1: Нареждане на кравите [Bruce Merry, Компютърна олимпиада на 
Южна Африка, 2003]

Фермерът Джон забелязал, че като подкарва в редица N-те си крави за 
доене (1 <= N <= 1500), някои винаги се нареждат преди някои други. 
Той направил списък от L (1 <= L <= 10000) двойки крави, за които 
забелязал това. Сега иска да изпрати списъка на приятеля си, фермера 
Боб. За съжаление, междуфермената мрежова връзка е много бавна.

Джон се сетил, че може да намали списъка, като премахне излишната 
информация. Информацията, която има, е все от един и същи вид: "крава
A се нарежда преди крава B". Например, ако е дадено, че "Алис е преди
Бети", "Бети е преди Керъл" и "Алис е преди Керъл", последното 
изречение е излишно. Разбира се, кравите са номерирани с уникални
последователни естествени числа от 1 до N; само някои от тях имат
имена (които тук няма да се използват).

Помогнете на Джон да намери най-малкото подмножество от своя списък,
от което може да се изведе и останалата част от него. За радост,
отговорът е еднозначно определен и в оригиналния списък няма
противоречия от рода на "Алис преди Бети" и "Бети преди Алис".

Име на задачата: order

ВХОДЕН ФОРМАТ:

* Ред 1: Две цели числа, разделени с интервал: N и L.

* Редове 2...L+1: Две цели числа X и Y (1 <= X,Y <= N), които показват,
         че крава номер X се нарежда преди крава номер Y. Няма
         дублирани факти.

ПРИМЕРЕН ВХОД (файл order.in):
5 6
3 5
4 2
5 2
2 1
3 1
4 1

ИЗХОДЕН ФОРМАТ:

* Ред 1: Един ред с броя U на фактите, които фермерът Джон ще изпрати
         на Боб.
* Редове от 2 до U+1: Фактите от входния файл, които фермерът Джон ще
         изпрати. Те трябва да са в същия формат като във входния файл. 
         Трябва да бъдат и наредени в ненамаляващ ред по първия елемент
         на реда, а тези с равни първи елементи - по втория елемент. 

ПРИМЕРЕН ИЗХОД (файл order.out):

4
2 1
3 5
4 2
5 2

ОБЯСНЕНИЕ НА ИЗХОДА:

Фактите "крава 3 преди крава 1" и "крава 4 преди крава 1" могат да се 
изведат от четирите факта в горния списък. Никой от тях обаче не може
да се изведе от другите.

**********************************************************************

Задача 2: Затвори я! [Jan Kuipers, 2003]

Беси пак се държа лошо и фермерът Джон трябва да я накаже, като я 
затвори за известно време. На пасището си той има N (1 <= N <= 250000)
правоъгълни заграждения, в които може да я запре. Те не се пресичат,
нито се допират, но може да се случи някоя оградена област изцяло да 
съдържа една или повече други.

Джон знае, че Беси е много умна крава и умее да се измъква от затвора
си. Затова иска да я сложи в такова заграждение, което в заобиколено 
от колкото може повече други заграждения. Той иска още и да знае колко
такива "добри затвори" има на пасището му. Помогнете му да намери тези
числа.

ИМЕ НА ЗАДАЧАТА: lock

ВХОДЕН ФОРМАТ:

* Ред 1: Един ред с единственото естествено число N

* Редове от 2 до N+1: Всеки ред съдържа четири естествени числа,
        разделени с интервал (съответно X1, Y1, X2 и Y2), които са
        координати на долния ляв и на горния десен ъгъл на оградата.
        Всички координати са в обхвата от 1 до 1000000000 и 
        едновременно са изпълнени X1<X2 и Y1<Y2.

ПРИМЕРЕН ВХОД (файл lock.in):

4
1 1 16 16
6 6 11 13
7 7 9 12
3 3 10 5

ИЗХОДЕН ФОРМАТ:

* Ред 1: Две цели числа, разделени с интервал: максималният брой 
        огради, които могат да заградят Беси, и колко такива места
        има в това стопанство.

ПРИМЕРЕН ИЗХОД (файл lock.out):

3 1

ОБЯСНЕНИЕ НА ИЗХОДА:

Третата ограда е обградена от огради 1 и 2, така че Беси може да бъде
заградена с 3 огради. Има само едно такова място.

**********************************************************************

Задача 3: Аритметични прогресии [Brian Dean, 2004]

Фермерът Джон имплантира нов RFID чип, който може да се чете машинно,
във всяка от кравите си, така че може да ги следи и да установи дали
всички са се върнали у дома след уморителното хранене на пасището през
деня.

Той доста се заинтригува, като забеляза една вечер, че кравите му често
се връщат така подредени, че много от номерата им образуват 
аритметична прогресия. Една след друга край него преминаха пет крави с
тези номера:
		1 4 3 5 7
Една бърза проверка показва, че кравите с номера 1, 3, 5 и 7 са 
наредени в аритметична прогресия (всеки член на прогресията се
различава от предходния й член с едно и също цяло число).

Помогнете на Джон да разбере дали това е съвпадение. Като имате
списък от N (1 <= N <= 2000) номера (неотрицателни цели числа, по-
малки от един милиард), намерете най-дългата подредица от този
списък, която образува аритметична прогресия (прогресиите могат да 
са растящи или намаляващи редици).

ИМЕ НА ЗАДАЧАТА: arithprg

ВХОДЕН ФОРМАТ:

* Ред 1: Един ред с цялото число N

* Редове от 2 до N+1: N реда, всеки с по едно цяло число. Първият
        ред съдържа номера на първата завърнала се крава и т.н.

ПРИМЕРЕН ВХОД (файл arithprg.in):

5
1
4
3
5
7

ИЗХОДЕН ФОРМАТ:

ПРИМЕРЕН ИЗХОД (файл arithprg.out):

4

**********************************************************************
